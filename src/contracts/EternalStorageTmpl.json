{
  "contractName": "EternalStorageTmpl",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "togglePause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Early Stage Investor (20% -> 1.8BIL) - Distribution plan for early stage investor - 2-years lockup period Docs: https://docs.google.com/document/d/1booqb3pZAcEwz32JHnpq3Npwtju6UKQm/edit Version v1.1.0\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/utils/EternalStorageTmpl.sol\":\"EternalStorageTmpl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/utils/EternalStorageTmpl.sol\":{\"keccak256\":\"0xf09c0ce6f2d277e8a25607b331abcf94f1a79efa665fffb5eac8307a51e05393\",\"license\":\"SimPL-2.0\",\"urls\":[\"bzz-raw://c212af2367b3fe9022926eaab7da24ef548c725b9893809ba6a0fb8f2a7bcbb7\",\"dweb:/ipfs/QmPckGG69Ebydv7fjmhNmB3tgjh6pA6pM3BUTF7GaW6d4F\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: SimPL-2.0\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n/**\n* @title Early Stage Investor (20% -> 1.8BIL)\n*\n* - Distribution plan for early stage investor\n* - 2-years lockup period\n*\n* Docs: https://docs.google.com/document/d/1booqb3pZAcEwz32JHnpq3Npwtju6UKQm/edit\n*\n* Version v1.1.0\n*\n*/\n\nabstract contract EternalStorageTmpl is Ownable, Pausable {\n    using SafeMath for uint256;\n    \n    mapping (bytes32 => uint256) internal storageUint;\n    mapping (bytes32 => address) internal storageAddress;\n    mapping (bytes32 => bool)    internal storageBool;\n\n    function togglePause() external onlyOwner {\n        if (paused()) _unpause(); else _pause();\n    }\n}",
  "sourcePath": "/Users/cea/Projects/important/parasite-dapp/contracts/utils/EternalStorageTmpl.sol",
  "ast": {
    "absolutePath": "project:/contracts/utils/EternalStorageTmpl.sol",
    "exportedSymbols": {
      "Context": [
        296
      ],
      "EternalStorageTmpl": [
        1720
      ],
      "Ownable": [
        104
      ],
      "Pausable": [
        196
      ],
      "SafeMath": [
        608
      ]
    },
    "id": 1721,
    "license": "SimPL-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1681,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1682,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1721,
        "sourceUnit": 105,
        "src": "64:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 1683,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1721,
        "sourceUnit": 197,
        "src": "117:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1684,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1721,
        "sourceUnit": 609,
        "src": "174:57:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1686,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "507:7:8"
            },
            "id": 1687,
            "nodeType": "InheritanceSpecifier",
            "src": "507:7:8"
          },
          {
            "baseName": {
              "id": 1688,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 196,
              "src": "516:8:8"
            },
            "id": 1689,
            "nodeType": "InheritanceSpecifier",
            "src": "516:8:8"
          }
        ],
        "canonicalName": "EternalStorageTmpl",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1685,
          "nodeType": "StructuredDocumentation",
          "src": "233:232:8",
          "text": " @title Early Stage Investor (20% -> 1.8BIL)\n - Distribution plan for early stage investor\n - 2-years lockup period\n Docs: https://docs.google.com/document/d/1booqb3pZAcEwz32JHnpq3Npwtju6UKQm/edit\n Version v1.1.0"
        },
        "fullyImplemented": true,
        "id": 1720,
        "linearizedBaseContracts": [
          1720,
          196,
          104,
          296
        ],
        "name": "EternalStorageTmpl",
        "nameLocation": "485:18:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1692,
            "libraryName": {
              "id": 1690,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 608,
              "src": "537:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "531:27:8",
            "typeName": {
              "id": 1691,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "550:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1696,
            "mutability": "mutable",
            "name": "storageUint",
            "nameLocation": "606:11:8",
            "nodeType": "VariableDeclaration",
            "scope": 1720,
            "src": "568:49:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 1695,
              "keyType": {
                "id": 1693,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "577:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "568:28:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 1694,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "588:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1700,
            "mutability": "mutable",
            "name": "storageAddress",
            "nameLocation": "661:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 1720,
            "src": "623:52:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 1699,
              "keyType": {
                "id": 1697,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "632:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "623:28:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 1698,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "643:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1704,
            "mutability": "mutable",
            "name": "storageBool",
            "nameLocation": "719:11:8",
            "nodeType": "VariableDeclaration",
            "scope": 1720,
            "src": "681:49:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 1703,
              "keyType": {
                "id": 1701,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "690:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "681:25:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 1702,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "701:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1718,
              "nodeType": "Block",
              "src": "779:56:8",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1709,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "793:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 1710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "793:8:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1714,
                        "name": "_pause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "820:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 1715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "820:8:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1716,
                    "nodeType": "ExpressionStatement",
                    "src": "820:8:8"
                  },
                  "id": 1717,
                  "nodeType": "IfStatement",
                  "src": "789:39:8",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1711,
                        "name": "_unpause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "803:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 1712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "803:10:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1713,
                    "nodeType": "ExpressionStatement",
                    "src": "803:10:8"
                  }
                }
              ]
            },
            "functionSelector": "c4ae3168",
            "id": 1719,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1707,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1706,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "769:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "769:9:8"
              }
            ],
            "name": "togglePause",
            "nameLocation": "746:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "757:2:8"
            },
            "returnParameters": {
              "id": 1708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "779:0:8"
            },
            "scope": 1720,
            "src": "737:98:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1721,
        "src": "467:370:8",
        "usedErrors": []
      }
    ],
    "src": "39:798:8"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/utils/EternalStorageTmpl.sol",
    "exportedSymbols": {
      "Context": [
        296
      ],
      "EternalStorageTmpl": [
        1720
      ],
      "Ownable": [
        104
      ],
      "Pausable": [
        196
      ],
      "SafeMath": [
        608
      ]
    },
    "id": 1721,
    "license": "SimPL-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1681,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1682,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1721,
        "sourceUnit": 105,
        "src": "64:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 1683,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1721,
        "sourceUnit": 197,
        "src": "117:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1684,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1721,
        "sourceUnit": 609,
        "src": "174:57:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1686,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "507:7:8"
            },
            "id": 1687,
            "nodeType": "InheritanceSpecifier",
            "src": "507:7:8"
          },
          {
            "baseName": {
              "id": 1688,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 196,
              "src": "516:8:8"
            },
            "id": 1689,
            "nodeType": "InheritanceSpecifier",
            "src": "516:8:8"
          }
        ],
        "canonicalName": "EternalStorageTmpl",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1685,
          "nodeType": "StructuredDocumentation",
          "src": "233:232:8",
          "text": " @title Early Stage Investor (20% -> 1.8BIL)\n - Distribution plan for early stage investor\n - 2-years lockup period\n Docs: https://docs.google.com/document/d/1booqb3pZAcEwz32JHnpq3Npwtju6UKQm/edit\n Version v1.1.0"
        },
        "fullyImplemented": true,
        "id": 1720,
        "linearizedBaseContracts": [
          1720,
          196,
          104,
          296
        ],
        "name": "EternalStorageTmpl",
        "nameLocation": "485:18:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1692,
            "libraryName": {
              "id": 1690,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 608,
              "src": "537:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "531:27:8",
            "typeName": {
              "id": 1691,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "550:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1696,
            "mutability": "mutable",
            "name": "storageUint",
            "nameLocation": "606:11:8",
            "nodeType": "VariableDeclaration",
            "scope": 1720,
            "src": "568:49:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 1695,
              "keyType": {
                "id": 1693,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "577:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "568:28:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 1694,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "588:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1700,
            "mutability": "mutable",
            "name": "storageAddress",
            "nameLocation": "661:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 1720,
            "src": "623:52:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 1699,
              "keyType": {
                "id": 1697,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "632:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "623:28:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 1698,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "643:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1704,
            "mutability": "mutable",
            "name": "storageBool",
            "nameLocation": "719:11:8",
            "nodeType": "VariableDeclaration",
            "scope": 1720,
            "src": "681:49:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 1703,
              "keyType": {
                "id": 1701,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "690:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "681:25:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 1702,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "701:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1718,
              "nodeType": "Block",
              "src": "779:56:8",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1709,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "793:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 1710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "793:8:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1714,
                        "name": "_pause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "820:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 1715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "820:8:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1716,
                    "nodeType": "ExpressionStatement",
                    "src": "820:8:8"
                  },
                  "id": 1717,
                  "nodeType": "IfStatement",
                  "src": "789:39:8",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1711,
                        "name": "_unpause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "803:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 1712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "803:10:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1713,
                    "nodeType": "ExpressionStatement",
                    "src": "803:10:8"
                  }
                }
              ]
            },
            "functionSelector": "c4ae3168",
            "id": 1719,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1707,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1706,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "769:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "769:9:8"
              }
            ],
            "name": "togglePause",
            "nameLocation": "746:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "757:2:8"
            },
            "returnParameters": {
              "id": 1708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "779:0:8"
            },
            "scope": 1720,
            "src": "737:98:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1721,
        "src": "467:370:8",
        "usedErrors": []
      }
    ],
    "src": "39:798:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-03-14T02:47:29.220Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Early Stage Investor (20% -> 1.8BIL) - Distribution plan for early stage investor - 2-years lockup period Docs: https://docs.google.com/document/d/1booqb3pZAcEwz32JHnpq3Npwtju6UKQm/edit Version v1.1.0",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}